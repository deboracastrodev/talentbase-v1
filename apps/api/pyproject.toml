[tool.poetry]
name = "talentbase-api"
version = "1.0.0"
description = "TalentBase API - Django REST backend"
authors = ["TalentBase Team"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.0"
djangorestframework = "^3.14"
django-cors-headers = "^4.3.0"
psycopg2-binary = "^2.9.9"
python-decouple = "^3.8"
celery = "^5.3.0"
redis = "^5.0.0"
gunicorn = "^21.2.0"
pycpfcnpj = "^1.8"
django-encrypted-model-fields = "^0.6.5"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-django = "^4.5.2"
pytest-cov = "^4.1.0"
black = "^23.12.0"
ruff = "^0.1.0"
mypy = "^1.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "talentbase.settings.development"
python_files = ["test_*.py", "*_test.py"]
testpaths = ["tests"]
