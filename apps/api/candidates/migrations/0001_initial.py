# Generated by Django 5.2.7 on 2025-10-02 14:06

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import candidates.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CandidateProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identificador único UUID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="Data/hora de criação"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Data/hora da última atualização"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True, default=True, help_text="Soft delete: False = deletado"
                    ),
                ),
                (
                    "full_name",
                    models.CharField(help_text="Nome completo do candidato", max_length=200),
                ),
                ("phone", models.CharField(help_text="Telefone de contato", max_length=20)),
                ("cpf", models.CharField(help_text="CPF (será encriptado)", max_length=255)),
                ("linkedin", models.URLField(help_text="URL do perfil LinkedIn")),
                (
                    "video_url",
                    models.URLField(
                        blank=True,
                        help_text="URL do vídeo de apresentação no YouTube",
                        validators=[candidates.models.validate_youtube_url],
                    ),
                ),
                (
                    "current_position",
                    models.CharField(
                        choices=[
                            ("SDR/BDR", "SDR/BDR"),
                            ("AE/Closer", "Account Executive/Closer"),
                            ("CSM", "Customer Success Manager"),
                        ],
                        db_index=True,
                        help_text="Posição atual na carreira de vendas",
                        max_length=50,
                    ),
                ),
                (
                    "years_of_experience",
                    models.PositiveIntegerField(help_text="Anos de experiência em vendas"),
                ),
                (
                    "sales_type",
                    models.CharField(
                        blank=True,
                        help_text="Tipo de vendas: Inbound, Outbound, Both",
                        max_length=50,
                    ),
                ),
                (
                    "sales_cycle",
                    models.CharField(
                        blank=True,
                        help_text="Ciclo de vendas típico (ex: 30-60 dias)",
                        max_length=100,
                    ),
                ),
                (
                    "avg_ticket",
                    models.CharField(
                        blank=True, help_text="Ticket médio (ex: R$ 10k-50k MRR)", max_length=100
                    ),
                ),
                (
                    "top_skills",
                    models.JSONField(
                        default=list,
                        help_text="Lista de habilidades principais (ex: ['Outbound', 'Negociação'])",
                    ),
                ),
                (
                    "tools_software",
                    models.JSONField(
                        default=list,
                        help_text="Ferramentas dominadas (ex: ['Salesforce', 'HubSpot'])",
                    ),
                ),
                (
                    "solutions_sold",
                    models.JSONField(
                        default=list, help_text="Soluções vendidas (ex: ['SaaS B2B', 'Fintech'])"
                    ),
                ),
                (
                    "departments_sold_to",
                    models.JSONField(
                        default=list,
                        help_text="Departamentos para quem vendeu (ex: ['C-Level', 'Marketing'])",
                    ),
                ),
                ("bio", models.TextField(blank=True, help_text="Bio/resumo profissional")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Disponível"),
                            ("inactive", "Inativo"),
                            ("no_contract", "Sem Contrato"),
                        ],
                        db_index=True,
                        default="available",
                        help_text="Status de disponibilidade",
                        max_length=20,
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=False, help_text="Perfil visível publicamente?"),
                ),
                (
                    "public_token",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text="Token para URL pública do perfil",
                        unique=True,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="Usuário associado ao perfil",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidate_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil de Candidato",
                "verbose_name_plural": "Perfis de Candidatos",
                "db_table": "candidate_profiles",
            },
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identificador único UUID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="Data/hora de criação"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Data/hora da última atualização"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True, default=True, help_text="Soft delete: False = deletado"
                    ),
                ),
                ("company_name", models.CharField(help_text="Nome da empresa", max_length=200)),
                ("position", models.CharField(help_text="Cargo ocupado", max_length=200)),
                ("start_date", models.DateField(help_text="Data de início")),
                (
                    "end_date",
                    models.DateField(
                        blank=True, help_text="Data de término (null se emprego atual)", null=True
                    ),
                ),
                (
                    "responsibilities",
                    models.TextField(blank=True, help_text="Responsabilidades e conquistas"),
                ),
                (
                    "candidate",
                    models.ForeignKey(
                        help_text="Candidato dono desta experiência",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="experiences",
                        to="candidates.candidateprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Experiência Profissional",
                "verbose_name_plural": "Experiências Profissionais",
                "db_table": "experiences",
                "ordering": ["-start_date"],
            },
        ),
        migrations.AddIndex(
            model_name="candidateprofile",
            index=models.Index(
                fields=["current_position", "status"], name="candidate_p_current_6ae472_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="candidateprofile",
            index=models.Index(
                fields=["status", "-created_at"], name="candidate_p_status_091b5b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="experience",
            index=models.Index(
                fields=["candidate", "-start_date"], name="experiences_candida_115c34_idx"
            ),
        ),
    ]
